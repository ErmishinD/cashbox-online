name: 'User management'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/change_shop
    metadata:
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      shop_id:
        name: shop_id
        description: ''
        required: true
        example: consequatur
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[{"id":1,"name":"Administrator","username":"admin","email":"admin@admin.com","roles":[{"id":1,"name":"Super Admin","human_name":"Super Administrator"}]},{"id":2,"name":"\u042e\u0440\u0438\u0439 \u0411\u0438\u043b\u043e\u0432","username":"yurii_bilov","email":"yurii_bilov@admin.com","roles":[{"id":2,"name":"director.1","human_name":"\u0414\u0438\u0440\u0435\u043a\u0442\u043e\u0440"}]},{"id":3,"name":"\u041c\u0430\u043a\u0441\u0438\u043c\u0446\u043e\u0432\u0430 \u0410\u043d\u0430\u0441\u0442\u0430\u0441\u0438\u044f","username":"Nadmin","email":"maksimtsova.anastasiya@gmail.com","roles":[{"id":2,"name":"director.1","human_name":"\u0414\u0438\u0440\u0435\u043a\u0442\u043e\u0440"}]},{"id":4,"name":"\u0414\u0438\u0440\u0435\u043a\u0442\u043e\u0440","username":"test.user","email":"test.user@test.com","roles":[{"id":6,"name":"director.2","human_name":"\u0414\u0438\u0440\u0435\u043a\u0442\u043e\u0440"}]},{"id":5,"name":"\u0411\u0438\u0434\u043d\u044b\u043a \u0412\u0438\u043a\u0442\u043e\u0440\u0438\u044f","username":"Vi_admin","email":"vika.bidnyk12@gmail.com","roles":[{"id":3,"name":"salesman.1","human_name":"\u041f\u0440\u043e\u0434\u0430\u0432\u0435\u0446"}]},{"id":6,"name":"\u0411\u043e\u0440\u0437\u0435\u043d\u043a\u043e\u0432\u0430 \u0415\u0432\u0433\u0435\u043d\u0438\u044f","username":"Borzenkova1","email":"jeniborzenkova123ap@gmail.com","roles":[{"id":3,"name":"salesman.1","human_name":"\u041f\u0440\u043e\u0434\u0430\u0432\u0435\u0446"}]},{"id":7,"name":"\u0428\u0430\u043f\u043e\u0432\u0430\u043b \u041b\u0438\u0434\u0438\u044f","username":"Lidia_admin","email":"petrisaklidia@gmail.com","roles":[{"id":3,"name":"salesman.1","human_name":"\u041f\u0440\u043e\u0434\u0430\u0432\u0435\u0446"}]},{"id":8,"name":"\u0417\u0443\u0431\u0435\u043d\u043a\u043e \u0415\u043b\u0435\u043d\u0430","username":"lena.admin","email":"lena.zubenko.94@ukr.net","roles":[{"id":3,"name":"salesman.1","human_name":"\u041f\u0440\u043e\u0434\u0430\u0432\u0435\u0446"}]},{"id":9,"name":"\u0411\u0430\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u043a\u043e \u0421\u0432\u0435\u0442\u043b\u0430\u043d\u0430","username":"sadmin","email":"admin@example.com","roles":[{"id":3,"name":"salesman.1","human_name":"\u041f\u0440\u043e\u0434\u0430\u0432\u0435\u0446"}]},{"id":10,"name":"\u0421\u043e\u043b\u043e\u0434\u043e\u0432\u043d\u0438\u043a \u0415\u043a\u0430\u0442\u0435\u0440\u0438\u043d\u0430","username":"K_admin","email":"solodkat@ua.fm","roles":[{"id":3,"name":"salesman.1","human_name":"\u041f\u0440\u043e\u0434\u0430\u0432\u0435\u0446"}]},{"id":11,"name":"\u0418\u0432\u0430\u0448\u0438\u043d\u0430 \u0414\u0438\u0430\u043d\u0430 \u0414\u043c\u0438\u0442\u0440\u0438\u0435\u0432\u043d\u0430","username":"di_admin","email":"diana13.09.2017@gmail.com","roles":[{"id":3,"name":"salesman.1","human_name":"\u041f\u0440\u043e\u0434\u0430\u0432\u0435\u0446"}]},{"id":12,"name":"\u041c\u0430\u0439\u043e\u0440\u043e\u0432\u0430 \u0418\u0440\u0438\u043d\u0430 \u0412\u043b\u0430\u0434\u0438\u0441\u043b\u0430\u0432\u043e\u0432\u043d\u0430","username":"ira_admin","email":"iramayorova558@gmail.com","roles":[{"id":3,"name":"salesman.1","human_name":"\u041f\u0440\u043e\u0434\u0430\u0432\u0435\u0446"}]}]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '48'
          vary: Origin
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: consequatur
        type: string
        custom: []
      username:
        name: username
        description: ''
        required: true
        example: consequatur
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: qkunze@example.com
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: consequatur
        type: string
        custom: []
      company_id:
        name: company_id
        description: ''
        required: true
        example: consequatur
        type: string
        custom: []
      roles:
        name: roles
        description: 'Must be one of <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, <code>5</code>, <code>6</code>, <code>7</code>, <code>8</code>, or <code>9</code>.'
        required: false
        example:
          - '4'
        type: 'string[]'
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"id":1,"name":"Administrator","username":"admin","email":"admin@admin.com","roles":[{"id":1,"name":"Super Admin","human_name":"Super Administrator"}]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '47'
          vary: Origin
        description: null
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/users/{id}'
    metadata:
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: consequatur
        type: string
        custom: []
      username:
        name: username
        description: ''
        required: true
        example: consequatur
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: qkunze@example.com
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: false
        example: null
        type: string
        custom: []
      roles:
        name: roles
        description: 'Must be one of <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, <code>5</code>, <code>6</code>, <code>7</code>, <code>8</code>, or <code>9</code>.'
        required: false
        example:
          - '4'
        type: 'string[]'
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{id}'
    metadata:
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
